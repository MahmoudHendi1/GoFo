/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Players;

import Users.User;
import Users.UserMainForm;
import Users.UserManger;
import Utilits.Playground;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.validator.routines.EmailValidator;

/**
 *
 * @author Lenovo
 */
public class PlayerProfile extends javax.swing.JFrame {

    /**
     * Creates new form PlayerProfile
     */
    private Player player;
    private boolean editMode = false;

    private ImageIcon scale(String path) {
        Image image = new ImageIcon(path).getImage();
        Image newimg = image.getScaledInstance(playerProfile.getWidth(), -1, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way 
        return new ImageIcon(newimg);
    }

    public void selectPhoto(Path originalPath) throws IOException {
        Path copied = Paths.get("playerPhotos/" + player.getUserName() + ".jpg");
        Files.copy(originalPath, copied, StandardCopyOption.REPLACE_EXISTING);
        playerProfile.setIcon(scale(copied.toString()));
        player.setPhotoLink(copied.toString());

    }

    public void init() {

        playerNameField.setText(player.getName());
        playerEmailField.setText(player.getEmail());
        playerPhoneNumField.setText(player.getPhoneNumber());
        playerAddressField.setText(player.getAddress());
        playerProfile.setIcon(scale(player.getPhotoLink()));
        choosePhotoButton.setVisible(false);
    }

    public PlayerProfile() {
        initComponents();
        player = new Player("Shawky", "ShawkyDev", "password_gamed", "youssef@gmail.com", "01157572128", "zayed , Giza");
        init();

    }

    public PlayerProfile(Player player) {
        initComponents();
        this.player = player;
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profilePane = new javax.swing.JPanel();
        playerProfile = new javax.swing.JLabel();
        playerNameLabel = new javax.swing.JLabel();
        playerAddressLabel = new javax.swing.JLabel();
        playerPhoneNumLabel = new javax.swing.JLabel();
        playerNameField = new javax.swing.JTextField();
        playerPhoneNumField = new javax.swing.JTextField();
        playerAddressField = new javax.swing.JTextField();
        playerEmailField = new javax.swing.JTextField();
        playerEmailLabel = new javax.swing.JLabel();
        choosePhotoButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        browsePlagroundButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playerProfile.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        playerNameLabel.setLabelFor(playerNameField);
        playerNameLabel.setText("Name: ");

        playerAddressLabel.setLabelFor(playerAddressField);
        playerAddressLabel.setText("Address:");

        playerPhoneNumLabel.setText("Phone Number:");

        playerNameField.setEditable(false);
        playerNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerNameFieldActionPerformed(evt);
            }
        });

        playerPhoneNumField.setEditable(false);
        playerPhoneNumField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerPhoneNumFieldActionPerformed(evt);
            }
        });

        playerAddressField.setEditable(false);
        playerAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerAddressFieldActionPerformed(evt);
            }
        });

        playerEmailField.setEditable(false);
        playerEmailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerEmailFieldActionPerformed(evt);
            }
        });

        playerEmailLabel.setLabelFor(playerNameField);
        playerEmailLabel.setText("Email");

        choosePhotoButton.setText("choose photo");
        choosePhotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosePhotoButtonActionPerformed(evt);
            }
        });

        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        browsePlagroundButton.setText("Browse playgrounds");
        browsePlagroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsePlagroundButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Log out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout profilePaneLayout = new javax.swing.GroupLayout(profilePane);
        profilePane.setLayout(profilePaneLayout);
        profilePaneLayout.setHorizontalGroup(
            profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(choosePhotoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(playerProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerPhoneNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(playerPhoneNumField)
                    .addComponent(playerNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerEmailField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerAddressField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(browsePlagroundButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(profilePaneLayout.createSequentialGroup()
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        profilePaneLayout.setVerticalGroup(
            profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profilePaneLayout.createSequentialGroup()
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerNameLabel)
                            .addComponent(playerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerEmailLabel)
                            .addComponent(playerEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerAddressLabel)
                            .addComponent(playerAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerPhoneNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerPhoneNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(playerProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choosePhotoButton)
                    .addGroup(profilePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(browsePlagroundButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(profilePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(profilePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void choosePhotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosePhotoButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                selectPhoto(Paths.get(selectedFile.getAbsolutePath()));
            } catch (IOException ex) {
                Logger.getLogger(PlayerProfile.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_choosePhotoButtonActionPerformed

    private void playerEmailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerEmailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerEmailFieldActionPerformed

    private void playerAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerAddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerAddressFieldActionPerformed

    private void playerPhoneNumFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerPhoneNumFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerPhoneNumFieldActionPerformed

    private void playerNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerNameFieldActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        //flip the flag 
        editMode = !editMode;
        if (editMode) {
            playerAddressField.setEditable(true);
            playerEmailField.setEditable(true);
            playerNameField.setEditable(true);
            playerPhoneNumField.setEditable(true);
            choosePhotoButton.setVisible(true);
            EditButton.setText("Save");
        } else {
            boolean isAllValid = true;
            playerAddressLabel.setForeground(Color.GREEN);
            playerEmailLabel.setForeground(Color.GREEN);
            playerNameLabel.setForeground(Color.GREEN);
            playerPhoneNumLabel.setForeground(Color.GREEN);

            EmailValidator emailValidator = EmailValidator.getInstance();
            if (!emailValidator.isValid(playerEmailField.getText())) {
                playerEmailLabel.setForeground(Color.red);
                isAllValid = false;
            }
            if (playerNameField.getText().isBlank()) {
                isAllValid = false;
                playerNameLabel.setForeground(Color.red);
            } else {
                for (int i = 0; i < playerNameField.getText().length(); ++i) {
                    if (!Character.isLetter(playerNameField.getText().charAt(i)) && playerNameField.getText().charAt(i) != ' ') {

                        isAllValid = false;
                        playerNameLabel.setForeground(Color.red);
                        break;
                    }
                }
            }
            if (playerAddressField.getText().isBlank()) {
                isAllValid = false;
                playerAddressLabel.setForeground(Color.red);
            }
            try {
                Double.parseDouble(playerPhoneNumField.getText());
                isAllValid = isAllValid && playerPhoneNumField.getText().charAt(0) == '0' && playerPhoneNumField.getText().length() == 11;
            } catch (NumberFormatException e) {
                isAllValid = false;
                playerPhoneNumLabel.setForeground(Color.RED);
            }
            if (isAllValid) {
                //checking the uniquness of the  phoneNumber , Email 
                if (UserManger.getUserbyEmail(playerEmailField.getText()) != player &&  UserManger.getUserbyEmail(playerEmailField.getText()) != null) {
                    JOptionPane.showMessageDialog(null, "This email is already in use", "Fail", JOptionPane.INFORMATION_MESSAGE);
                    playerEmailLabel.setForeground(Color.RED);
                } else if (UserManger.getUserByPhone(playerPhoneNumField.getText()) != player && UserManger.getUserByPhone(playerPhoneNumField.getText()) != null) {
                    JOptionPane.showMessageDialog(null, "This Phone number is already in use", "Fail", JOptionPane.INFORMATION_MESSAGE);
                    playerPhoneNumLabel.setForeground(Color.RED);
                } else {
                    /// allvalid and the data is unique :
                    //update
                    player.setAddress(playerAddressField.getText());
                    player.setName(playerNameField.getText());
                    player.setPhoneNumber(playerPhoneNumField.getText());
                    player.setEmail(playerEmailField.getText());
                    playerAddressField.setEditable(false);
                    playerEmailField.setEditable(false);
                    playerNameField.setEditable(false);
                    playerPhoneNumField.setEditable(false);
                    choosePhotoButton.setVisible(false);
                    EditButton.setText("Edit");
                    editMode=false;
                }

            } else {
                JOptionPane.showMessageDialog(null, "All data must be Valid", "Fail", JOptionPane.INFORMATION_MESSAGE);
                editMode = true;
                
            }

            

        }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void browsePlagroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsePlagroundButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        BookingPage bookPage = new BookingPage(player);
        bookPage.setVisible(true);
        
        
    }//GEN-LAST:event_browsePlagroundButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        UserMainForm loginFrom = new UserMainForm();
        loginFrom.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditButton;
    private javax.swing.JButton browsePlagroundButton;
    private javax.swing.JButton choosePhotoButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextField playerAddressField;
    private javax.swing.JLabel playerAddressLabel;
    private javax.swing.JTextField playerEmailField;
    private javax.swing.JLabel playerEmailLabel;
    private javax.swing.JTextField playerNameField;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JTextField playerPhoneNumField;
    private javax.swing.JLabel playerPhoneNumLabel;
    private javax.swing.JLabel playerProfile;
    private javax.swing.JPanel profilePane;
    // End of variables declaration//GEN-END:variables
}
